{"version":3,"sources":["Loader/Loader.jsx","NavBar/script.js","NavBar/mainNavBar.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Loader","className","window","onload","hamburger","document","querySelector","navLink","querySelectorAll","navLinks","addEventListener","classList","toggle","forEach","link","MainNavBar","state","src","alt","to","Component","Home","lazy","StuLanding","StuSignup","CrLanding","About","NewCr","CrDetails","TeacherDetails","Landing","NewTeacher","ClassDetails","classDetails","TeacherLogin","CrLogin","NotFound","StuLogin","Profile","App","getElementsByTagName","add","localStorage","getItem","fallback","path","exact","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9a414eb8.chunk.js","sourcesContent":["import React from 'react';\nimport './loader.css';\n\nconst Loader = () => {\n    return (\n        <div className=\"loader mx-auto\">\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n    );\n}\n\nexport default Loader;\n","window.onload = () => {\n  const hamburger = document.querySelector(\".hamburger\"),\n    navLink = document.querySelectorAll(\".nav-link\"),\n    navLinks = document.querySelector(\".nav-links\");\n\n  hamburger.addEventListener(\"click\", () => {\n    navLinks.classList.toggle(\"open\");\n  });\n\n  navLink.forEach((link) =>\n    link.addEventListener(\"click\", () => {\n      navLinks.classList.toggle(\"open\");\n    })\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./main.css\";\nimport \"./script\";\nimport { Link } from \"react-router-dom\";\n\nclass MainNavBar extends Component {\n  state = {};\n  render() {\n    return (\n      <nav className=\"fixed-top\">\n        <div className=\"hamburger\">\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n          <div className=\"line\"></div>\n        </div>\n\n        <div className=\"brand\">\n          <img src=\"./logo.png\" alt=\"LAAYAK\" className=\"logo\" />\n          <li>LaayaK</li>\n        </div>\n        <ul className=\"nav-links\">\n          <Link to=\"/\" className=\"nav-link\">\n            <li>home</li>\n          </Link>\n          <Link to=\"/student\" className=\"nav-link\">\n            <li>student</li>\n          </Link>\n          <Link to=\"/cr\" className=\"nav-link\">\n            <li>class representative</li>\n          </Link>\n          <Link to=\"/teacher\" className=\"nav-link\">\n            <li>teacher</li>\n          </Link>\n          <Link to=\"/about\" className=\"nav-link\">\n            <li>about</li>\n          </Link>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default MainNavBar;\n","import React, { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./assets/css/home.css\";\nimport \"./assets/css/about.css\";\nimport \"./assets/css/Login.css\";\nimport \"./assets/css/mainPage.css\";\nimport \"./assets/css/loadingButton.css\";\nimport \"./assets/css/fileInput.css\";\nimport MainNavBar from \"./NavBar/mainNavBar\";\nimport Loader from \"./Loader/Loader\";\n\nconst Home = lazy(() => import(\"./Home/home\"));\nconst StuLanding = lazy(() => import(\"./StuComponents/stuLanding\"));\nconst StuSignup = lazy(() => import('./StuComponents/StuSignup'));\nconst CrLanding = lazy(() => import(\"./CrComponents/crLanding\"));\nconst About = lazy(() => import(\"./about\"));\nconst NewCr = lazy(() => import(\"./CrComponents/newCr\"));\nconst CrDetails = lazy(() => import(\"./CrComponents/afterSignup\"));\nconst TeacherDetails = lazy(() => import(\"./Teacher/AfterSignup\"));\nconst Landing = lazy(() => import(\"./Teacher/Landing\"));\nconst NewTeacher = lazy(() => import(\"./Teacher/NewTeacher\"));\nconst ClassDetails = lazy(() => import(\"./Teacher/ClassDetails\"));\nconst classDetails = lazy(() => import(\"./CrComponents/ClassDetails\"));\nconst TeacherLogin = lazy(() => import(\"./Teacher/TeacherLogin\"));\nconst CrLogin = lazy(() => import(\"./CrComponents/crLogin\"));\nconst NotFound = lazy(() => import(\"./NotFound/NotFound\"));\nconst StuLogin = lazy(() => import(\"./StuComponents/StuLogin\"));\nconst Profile = lazy(() => import(\"./StuComponents/profile/Profile\"));\n\nfunction App() {\n  document.getElementsByTagName(\"body\")[0].classList.add(localStorage.getItem(\"mode\"));\n  return (\n    <div className=\"App\">\n      <Router>\n        <MainNavBar />\n          <Suspense fallback={<Loader />}>\n            <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/student\" exact component={StuLanding} />\n            <Route path=\"/student/login\" exact component={StuLogin} />\n            <Route path=\"/student/signup\" exact component={StuSignup} />\n            <Route path=\"/student/profile\" exact component={Profile} />\n            <Route path=\"/newcr\" exact component={NewCr} />\n            <Route path=\"/newcr/details\" exact component={CrDetails} />\n            <Route path=\"/cr\" exact component={CrLanding} />\n            <Route path=\"/cr/login\" exact component={CrLogin} />\n            <Route path=\"/cr/class\" exact component={classDetails} />\n            <Route path=\"/teacher\" exact component={Landing} />\n            <Route path=\"/teacher/login\" exact component={TeacherLogin} />\n            <Route path=\"/teacher/class\" exact component={ClassDetails} />\n            <Route path=\"/newteacher\" exact component={NewTeacher} />\n            <Route path=\"/newteacher/details\" exact component={TeacherDetails} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"*\" component={NotFound} />\n            </Switch>\n          </Suspense>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}