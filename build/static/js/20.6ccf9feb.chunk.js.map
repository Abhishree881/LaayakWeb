{"version":3,"sources":["Teacher/TeacherLogin.jsx","firebase.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js"],"names":["db","firebase","firestore","TeacherLogin","state","email","password","handleChange","e","nam","target","name","val","value","setState","handleLogin","preventDefault","pass","collection","doc","get","then","data","auth","signInWithEmailAndPassword","M","toast","html","classes","window","location","pathname","catch","err","message","form","className","onSubmit","style","width","htmlFor","placeholder","id","type","onChange","required","to","this","Component","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable"],"mappings":"wNAKIA,EAAKC,IAASC,YAEZC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,SAACC,GACd,IAAMC,EAAMD,EAAEE,OAAOC,KACnBC,EAAMJ,EAAEE,OAAOG,MACjB,EAAKC,SAAL,eACGL,EAAMG,K,EAIXG,YAAc,SAACP,GACbA,EAAEQ,iBACF,IAAMX,EAAQ,EAAKD,MAAMC,MACvBY,EAAO,EAAKb,MAAME,SACpBN,EAAGkB,WAAW,YAAYC,IAAId,GAAOe,MAAMC,MAAK,SAACF,GAC3CA,EAAIG,OACNrB,IAASsB,OAAOC,2BAA2BnB,EAAOY,GAC/CI,MAAK,WACJI,IAAEC,MAAM,CAAEC,KAAM,yBAA0BC,QAAS,wBACnDC,OAAOC,SAASC,SAAW,cAE5BC,OAAM,SAACC,GACc,kEAAhBA,EAAIC,SACNT,IAAEC,MAAM,CAAEC,KAAM,yBAA0BC,QAAS,yBAIzDH,IAAEC,MAAM,CAAEC,KAAM,yBAA0BC,QAAS,0B,EAazDO,KAAO,WACL,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,sCACA,0BAAMC,SAAU,EAAKtB,YAAauB,MAAO,CAAEC,MAAO,SAChD,yBAAKH,UAAU,mBACb,yBAAKA,UAAU,aACb,2BAAOI,QAAQ,SAAf,SAGA,2BACEC,YAAY,oBACZC,GAAG,QACH/B,KAAK,QACLE,MAAO,EAAKT,MAAMC,MAClBsC,KAAK,OACLC,SAAU,EAAKrC,aACfsC,UAAQ,KAGZ,yBAAKT,UAAU,aACb,2BAAOI,QAAQ,YAAf,YAGA,2BACEC,YAAY,WACZC,GAAG,WACH/B,KAAK,WACLE,MAAO,EAAKT,MAAME,SAClBqC,KAAK,WACLC,SAAU,EAAKrC,aACfsC,UAAQ,KAGZ,yBAAKT,UAAU,WAAf,aACY,kBAAC,IAAD,CAAMU,GAAG,eAAT,aAGd,gCACE,4BAAQH,KAAK,SAASP,UAAU,aAAhC,gB,uDAhDZ,OACE,6BACGW,KAAKZ,Y,GAvCaa,aAiGZ7C,a,gCCxGf,iCAeAF,IAASgD,cAXc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIFxD,MAAf,G,gCChBe,SAASyD,EAAgBC,EAAKC,EAAK/C,GAYhD,OAXI+C,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9B/C,MAAOA,EACPkD,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAO/C,EAGN8C,EAZT","file":"static/js/20.6ccf9feb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport M from \"materialize-css\"\nimport firebase from \"../firebase\";\n\nlet db = firebase.firestore();\n\nclass TeacherLogin extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    const nam = e.target.name,\n      val = e.target.value;\n    this.setState({\n      [nam]: val,\n    });\n  };\n\n  handleLogin = (e) => {\n    e.preventDefault();\n    const email = this.state.email,\n      pass = this.state.password;\n    db.collection(\"teachers\").doc(email).get().then((doc) => {\n      if (doc.data()) {\n        firebase.auth().signInWithEmailAndPassword(email, pass)\n          .then(() => {\n            M.toast({ html: \"Logged In Successfully\", classes: \"toast success-toast\" })\n            window.location.pathname = \"/teacher\"\n          })\n          .catch((err) => {\n            if (err.message === \"The password is invalid or the user does not have a password.\") {\n              M.toast({ html: \"Invalid Email/Password\", classes: \"toast error-toast\" })\n            }\n          });\n      } else {\n        M.toast({ html: \"Invalid Email/Password\", classes: \"toast error-toast\" })\n      }\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        {this.form()}\n      </div>\n    );\n  }\n\n  form = () => {\n    return (\n      <div className=\"main-container\">\n        <div className=\"container-login mx-auto\">\n          <div className=\"con-login\">\n            <h1>Log In</h1>\n            <form onSubmit={this.handleLogin} style={{ width: \"100%\" }}>\n              <div className=\"con-inputs mt-4\">\n                <div className=\"con-input\">\n                  <label htmlFor=\"email\">\n                    Email\n                        </label>\n                  <input\n                    placeholder=\"email@example.com\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={this.state.email}\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    required\n                  />\n                </div>\n                <div className=\"con-input\">\n                  <label htmlFor=\"password\">\n                    Password\n                        </label>\n                  <input\n                    placeholder=\"Password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    type=\"password\"\n                    onChange={this.handleChange}\n                    required\n                  />\n                </div>\n                <div className=\"con-new\">\n                  New here? <Link to=\"/newteacher\">Sign Up</Link>\n                </div>\n              </div>\n              <footer>\n                <button type=\"submit\" className=\"btn-login\">\n                  Log In\n                </button>\n              </footer>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default TeacherLogin;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAmIvOPjQnup4mQ5aG39T5baEpulNmWv4k\",\n  authDomain: \"laayak-web-app.firebaseapp.com\",\n  databaseURL: \"https://laayak-web-app.firebaseio.com\",\n  projectId: \"laayak-web-app\",\n  storageBucket: \"laayak-web-app.appspot.com\",\n  messagingSenderId: \"308936714271\",\n  appId: \"1:308936714271:web:002f9b74b345181da7cd2a\",\n  measurementId: \"G-YHF3LDWKKG\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}"],"sourceRoot":""}